{
  "vscode_custom_css.imports": ["file:///Users/carlyu/C++/.vscode/custom.css"],
  "C_Cpp.autocomplete": "default", // 安装了clangd和C/C++ Snippets后可以进用掉内置的snippets和complete
  "terminal.integrated.fontFamily": "Cascadia Code", // 换字体
  "terminal.integrated.fontSize": 20, // 字体大小
  "files.defaultLanguage": "cpp", // ctrl+N新建文件后默认的语言
  "editor.formatOnType": true, // 输入分号(C/C++的语句结束标识)后自动格式化当前这一行的代码
  "editor.defaultFormatter": "esbenp.prettier-vscode", // 默认格式化工具prettier
  "[cpp]": {
    "editor.defaultFormatter": "ms-vscode.cpptools" // C++文件使用cpptools格式化
  },
  "editor.formatOnSave": true, // 保存时格式化
  "editor.formatOnPaste": true, // 粘贴时格式化
  "editor.suggest.preview": true, // 在编辑器中实时预览代码建议
  "editor.suggest.snippetsPreventQuickSuggestions": false, // clangd的snippets有很多的跳转点，不用这个就必须手动触发Intellisense了
  "editor.acceptSuggestionOnEnter": "on", // 若关闭，按回车时会换行，只有tab才会接受Intellisense
  // "editor.snippetSuggestions": "top", // （可选）snippets显示在补全列表顶端，默认是inline
  "editor.quickSuggestions": {
    "other": true,
    "comments": false,
    "strings": false
  },
  "GBK2UTF8.autoDetect": true, // 是否主动提示编码转换
  "code-runner.runInTerminal": true, // 设置成false会在“输出”中输出，无法输入
  "code-runner.executorMap": {
    "c": "gcc '$fileName' -o '$fileNameWithoutExt.exec' -Wall -O2 -m64 -lm -static-libgcc -fexec-charset=utf-8 -finput-charset=utf-8  && clear && ./'$fileNameWithoutExt.exec'",
    "cpp": "g++ -std=c++11 '$fileName' -o '$fileNameWithoutExt.exec' -w -Wall -O2 -m64 -static-libgcc -I/home/carlyu/vscode/Algorithm_DS -fexec-charset=utf-8 -finput-charset=utf-8 && clear && ./'$fileNameWithoutExt.exec'"
    // 当前配置: Linux gcc bash
    // 其他系统需要稍作修改
    // 在输出文件后面加上.exec后缀，方便进行屏蔽
    // -finput-charset 设定输入流的文件编码，便于运行中文文件；utf8：内置终端使用；GBK：外置终端
    // -w：不显示warnings
    // "c": "gcc $fileName -o $fileNameWithoutExt.exe -Wall -O2 -m64 -lm -static-libgcc -fexec-charset=GBK -D__USE_MINGW_ANSI_STDIO && $dir$fileNameWithoutExt.exe",
    // "cpp": "g++ $fileName -o $fileNameWithoutExt.exe -Wall -O2 -m64 -static-libgcc -fexec-charset=GBK && $dir$fileNameWithoutExt.exe"
  }, // 右键run code时运行的命令；未注释的仅适用于PowerShell（Win10默认）和pwsh，文件名中有空格也可以编译运行；注释掉的适用于cmd（win7默认）、PS和bash，但文件名中有空格时无法运行
  "code-runner.saveFileBeforeRun": true, // run code前保存
  "code-runner.preserveFocus": false, // 若为false，run code后光标会聚焦到终端上。如果需要频繁输入数据可设为false
  "code-runner.clearPreviousOutput": true, // 每次run code前清空属于code runner的终端消息，默认false
  "code-runner.ignoreSelection": false, // 默认为false，效果是鼠标选中一块代码后可以单独执行，但C是编译型语言，不适合这样用
  "code-runner.fileDirectoryAsCwd": true, // 将code runner终端的工作目录切换到文件目录再运行，对依赖cwd的程序产生影响；如果为false，executorMap要加cd $dir
  "C_Cpp.clang_format_sortIncludes": true, // 格式化时调整include的顺序（按字母排序）
  "C_Cpp.default.includePath": [
    "${workspaceFolder}/**",
    "D:\\Dev\\MinGW64\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\include\\c++",
    "D:\\Dev\\MinGW64\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\include\\c++\\bits"
  ], // 默认的include路径，可以是相对路径，也可以是绝对路径
  "C_Cpp.errorSquiggles": "enabledIfIncludesResolve", // 仅当include路径解析成功时才启用错误波浪线
  "clang.completion.enable": false, // clang代码提示开关，开了会有冲突
  "clang.executable": "clang", // clangd的路径
  "clang.cxxflags": ["-std=c++11"],
  "files.associations": {
    "vector": "cpp",
    "iomanip": "cpp",
    "iostream": "cpp",
    "functional": "cpp",
    "iosfwd": "cpp",
    "array": "cpp",
    "atomic": "cpp",
    "*.tcc": "cpp",
    "cctype": "cpp",
    "clocale": "cpp",
    "cmath": "cpp",
    "cstdarg": "cpp",
    "cstddef": "cpp",
    "cstdint": "cpp",
    "cstdio": "cpp",
    "cstdlib": "cpp",
    "cstring": "cpp",
    "ctime": "cpp",
    "cwchar": "cpp",
    "cwctype": "cpp",
    "deque": "cpp",
    "unordered_map": "cpp",
    "exception": "cpp",
    "algorithm": "cpp",
    "map": "cpp",
    "memory": "cpp",
    "memory_resource": "cpp",
    "optional": "cpp",
    "string": "cpp",
    "string_view": "cpp",
    "system_error": "cpp",
    "tuple": "cpp",
    "type_traits": "cpp",
    "utility": "cpp",
    "fstream": "cpp",
    "initializer_list": "cpp",
    "istream": "cpp",
    "limits": "cpp",
    "new": "cpp",
    "ostream": "cpp",
    "sstream": "cpp",
    "stdexcept": "cpp",
    "streambuf": "cpp",
    "typeinfo": "cpp",
    "__bit_reference": "cpp",
    "__config": "cpp",
    "__debug": "cpp",
    "__errc": "cpp",
    "__functional_base": "cpp",
    "__hash_table": "cpp",
    "__locale": "cpp",
    "__mutex_base": "cpp",
    "__node_handle": "cpp",
    "__nullptr": "cpp",
    "__split_buffer": "cpp",
    "__string": "cpp",
    "__threading_support": "cpp",
    "__tree": "cpp",
    "__tuple": "cpp",
    "any": "cpp",
    "barrier": "cpp",
    "bit": "cpp",
    "bitset": "cpp",
    "cfenv": "cpp",
    "charconv": "cpp",
    "chrono": "cpp",
    "cinttypes": "cpp",
    "codecvt": "cpp",
    "compare": "cpp",
    "complex": "cpp",
    "concepts": "cpp",
    "condition_variable": "cpp",
    "csetjmp": "cpp",
    "csignal": "cpp",
    "coroutine": "cpp",
    "forward_list": "cpp",
    "future": "cpp",
    "ios": "cpp",
    "iterator": "cpp",
    "latch": "cpp",
    "list": "cpp",
    "locale": "cpp",
    "mutex": "cpp",
    "numbers": "cpp",
    "numeric": "cpp",
    "queue": "cpp",
    "random": "cpp",
    "ratio": "cpp",
    "regex": "cpp",
    "scoped_allocator": "cpp",
    "semaphore": "cpp",
    "set": "cpp",
    "shared_mutex": "cpp",
    "span": "cpp",
    "stack": "cpp",
    "thread": "cpp",
    "typeindex": "cpp",
    "unordered_set": "cpp",
    "valarray": "cpp",
    "variant": "cpp",
    "cuchar": "cpp",
    "source_location": "cpp",
    "ranges": "cpp",
    "stop_token": "cpp",
    "syncstream": "cpp",
    "stdc++": "cpp"
  },
  "files.exclude": {
    "**/*": false,
    "**/.gitkeep": true, // 隐藏gitkeep文件
    "**/*.dSYM": true, // 隐藏调试
    "**/*.exec": true, // 隐藏Linux可执行文件
    "**/*.zip": true,
    "**/*.o": true,
    "**/*.exe": true, // 为了区分可执行文件已经将项目可执行文件命名为.exec所以这里不隐藏
    "**/*.class": true,
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.factorypath": true,
    "**/.png": true, // 隐藏图片
    "**/.jpg": true // 隐藏图片
  }
}
